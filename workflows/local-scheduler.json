{
  "name": "Demo AI Agent (DP)",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert automation agent. Your goal is to process and upload Valorant video clips to TikTok by following a strict, multi-step process.\n\n- Think step-by-step to decide which tool to use next based on the user's prompt.\n- Use the provided tools in a logical sequence. Do not skip steps.\n- Only use the data provided by the tools. Do not make up information.\n- Handle one video clip at a time from start to finish.\n- Do not ask for confirmation. Execute the plan as instructed.",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Your task is to label a batch of video clips and then prepare a list of their filenames for the next step. Follow these instructions precisely:\n\n1.  First, use the `Get tasks` tool to find all clips from the spreadsheet where the `status` column is contain nothing.\n\n2.  **If the result of the previous step is empty, skip the next two steps and go directly to step 5.**\n\n3.  If you found clips, use the `Google Gemini Chat Model` to generate a `title` and `caption` for **every single clip** in the batch.\n\n4.  After generating all the content, use the `Update Tasks` tool to update **all the corresponding rows** in the spreadsheet. For each row, you must add the new `title`, `caption`, and set the `status` to `labelled`.\n\n5.  Now, use the `Get tasks` tool **a second time** where Return_only_First_Matching_Row is True and the `status` contain `labelled`. If you get an empty result, wait a moment and try again.\n\n6.  Finally, your **only output** for this entire workflow must be a single object containing filename, title, description and tags (formatted with #, example: #shorts, #valorant_champion) from step 5. "
        }
      },
      "id": "b34a8f6d-8c18-4d25-a9bd-94bc066460f8",
      "name": "Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        768,
        96
      ],
      "executeOnce": false,
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        640,
        320
      ],
      "id": "f172e6e7-50a7-4f58-ad76-916188a7e59a",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "eTkbzoXMG9FFL4p9",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/112O_ei_PpvgUOkSmdMPpjT-vSazBcQA13BDvRXXMMpU/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/112O_ei_PpvgUOkSmdMPpjT-vSazBcQA13BDvRXXMMpU/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "status",
              "lookupValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('values0_Value', ``, 'string') }}"
            }
          ]
        },
        "options": {
          "returnFirstMatch": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_only_First_Matching_Row', ``, 'boolean') }}"
        }
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        768,
        320
      ],
      "id": "ac0f4cb6-4ae3-4678-b737-b42a83fadd43",
      "name": "Get tasks",
      "credentials": {
        "googleApi": {
          "id": "h66p6czSuCoasC3D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/112O_ei_PpvgUOkSmdMPpjT-vSazBcQA13BDvRXXMMpU/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/112O_ei_PpvgUOkSmdMPpjT-vSazBcQA13BDvRXXMMpU/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('title', ``, 'string') }}",
            "caption": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('caption', ``, 'string') }}",
            "status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('status', ``, 'string') }}",
            "filename": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('filename__using_to_match_', ``, 'string') }}"
          },
          "matchingColumns": [
            "filename"
          ],
          "schema": [
            {
              "id": "filename",
              "displayName": "filename",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "yt_source",
              "displayName": "yt_source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        896,
        320
      ],
      "id": "2af1ae7d-7f70-491b-ad61-7e07fe76e655",
      "name": "Update Tasks",
      "credentials": {
        "googleApi": {
          "id": "h66p6czSuCoasC3D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"filename\": \"xxxxxx.mp4\",\n\t\"title\": \"Title\",\n    \"caption\": \"caption\",\n    \"tags\": \"#example, #tag_spacing\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1024,
        320
      ],
      "id": "148b7e2f-b5d7-4e4b-b769-294efe06dad6",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 11
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        416,
        96
      ],
      "id": "f268ae46-c8b4-4341-b004-cddb6dbc5ead",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "fileSelector": "=/uploads/{{ $json.output.filename }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1232,
        240
      ],
      "id": "935387ff-a08c-4998-a51d-ad3af547d32b",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1456,
        240
      ],
      "id": "38970508-a0e1-46f3-a1fe-db3a06f5972b",
      "name": "Merge"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8009/upload",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "video_path",
              "value": "=/upload/{{ $json.output.filename }}"
            },
            {
              "name": "sessionid",
              "value": "7871cd7811f24e2d3b4b77ecb660d4ae"
            },
            {
              "name": "description",
              "value": "={{ $json.output.caption }}"
            },
            {
              "name": "visibility",
              "value": "everyone"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1232,
        -128
      ],
      "id": "af6eeb1d-45d2-49a8-a415-23293a6111d2",
      "name": "Upload Tiktok",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8000/upload",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "video_path",
              "value": "=/uploads/{{ $json.output.filename }}"
            },
            {
              "name": "description",
              "value": "={{ $json.output.caption }}"
            },
            {
              "name": "username",
              "value": "valorantback"
            },
            {
              "name": "password",
              "value": "VQt^DAa4!safllEy27O"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1232,
        48
      ],
      "id": "ec01c25f-c5c1-490a-9a5e-0ada741cf0b1",
      "name": "Upload Instagram",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2432,
        320
      ],
      "id": "62f94a34-2e3f-4996-ba0e-d310ecb411db",
      "name": "Gemini (Aftertask)",
      "credentials": {
        "googlePalmApi": {
          "id": "eTkbzoXMG9FFL4p9",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/112O_ei_PpvgUOkSmdMPpjT-vSazBcQA13BDvRXXMMpU/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/112O_ei_PpvgUOkSmdMPpjT-vSazBcQA13BDvRXXMMpU/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('status', ``, 'string') }}",
            "filename": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('filename__using_to_match_', ``, 'string') }}",
            "is_tiktok_uploaded": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('is_tiktok_uploaded', ``, 'string') }}",
            "is_ig_uploaded": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('is_ig_uploaded', ``, 'string') }}",
            "is_yt_uploaded": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('is_yt_uploaded', ``, 'string') }}"
          },
          "matchingColumns": [
            "filename"
          ],
          "schema": [
            {
              "id": "filename",
              "displayName": "filename",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "yt_source",
              "displayName": "yt_source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "is_tiktok_uploaded",
              "displayName": "is_tiktok_uploaded",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "is_ig_uploaded",
              "displayName": "is_ig_uploaded",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "is_yt_uploaded",
              "displayName": "is_yt_uploaded",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        2576,
        320
      ],
      "id": "b3facb47-cd05-45dc-896e-ceb1b23779c9",
      "name": "Update (Aftertask)",
      "credentials": {
        "googleApi": {
          "id": "h66p6czSuCoasC3D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "upload",
        "title": "={{ $json.output.title }}",
        "regionCode": "ID",
        "categoryId": "20",
        "options": {
          "description": "={{ $json.output.caption }}",
          "privacyStatus": "public"
        }
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        1664,
        240
      ],
      "id": "9abffb38-5dbc-4923-9d3f-69f204beb229",
      "name": "Upload Youtube",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "wImVMlPaWRPddjND",
          "name": "YouTube account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You will receive an array of upload status objects, each with these fields:\n- filename\n- is_tiktok_uploaded (\"true\" or \"false\")\n- is_instagram_uploaded (\"true\" or \"false\")\n- is_yt_uploaded (\"true\" or \"false\")\n- status (\"completed\" or \"failed\")\n\nFor each object, update the corresponding row in the spreadsheet using the Update (Aftertask) tool.\n\nDo not update any other columns or rows.\n\nOnly one update should be performed per filename, setting the columns exactly as provided.\n\nUpload Status:\n{{ (() => { return JSON.stringify($input.all()) })() }}\n",
        "options": {}
      },
      "id": "acf466d6-7b33-4b8c-acf9-4760b10366d4",
      "name": "After Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        2432,
        144
      ],
      "executeOnce": false,
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e79c2cec-3611-4be4-be17-795a50dc71fa",
              "name": "source",
              "value": "tiktok",
              "type": "string"
            },
            {
              "id": "8421c922-5f3c-4990-b829-aa40920e9aa7",
              "name": "filename",
              "value": "={{ $('Agent').item.json.output.filename }}",
              "type": "string"
            },
            {
              "id": "53cbb930-538f-43eb-bf53-f1c7828cdcb6",
              "name": "error",
              "value": "={{ $json.error.message }}",
              "type": "string"
            },
            {
              "id": "47344646-eedb-485c-ae52-78bbb3b45652",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            },
            {
              "id": "18a0bacc-aada-4781-be9e-7c1db923e0bb",
              "name": "status",
              "value": "={{ $json.status }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1840,
        -112
      ],
      "id": "024483a4-5399-4172-8885-0aff3467429e",
      "name": "Add src \"Tiktok\""
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e79c2cec-3611-4be4-be17-795a50dc71fa",
              "name": "source",
              "value": "instagram",
              "type": "string"
            },
            {
              "id": "c06ff35d-e417-409d-bf1e-4ffe1a4535e9",
              "name": "filename",
              "value": "={{ $('Agent').item.json.output.filename }}",
              "type": "string"
            },
            {
              "id": "98b84901-6952-441a-892e-7ecfd191022d",
              "name": "error",
              "value": "={{ $json.error.message }}",
              "type": "string"
            },
            {
              "id": "442ed9f9-6672-456b-87a1-6f50dd82b2f0",
              "name": "status",
              "value": "={{ $json.status }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1840,
        64
      ],
      "id": "4b27a588-9fe4-4321-bfd0-f1f6572b8946",
      "name": "Add src \"Instagram\""
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e79c2cec-3611-4be4-be17-795a50dc71fa",
              "name": "source",
              "value": "youtube",
              "type": "string"
            },
            {
              "id": "0abba409-e55f-4255-8c9d-351405f82075",
              "name": "error",
              "value": "={{ $json.error }}",
              "type": "string"
            },
            {
              "id": "2fe057bb-9059-472c-80a6-c30515931ef5",
              "name": "filename",
              "value": "={{ $('Agent').item.json.output.filename }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1840,
        240
      ],
      "id": "950ec3c0-3b21-4c7f-9622-00f18a88e8ce",
      "name": "Add src \"Youtube\""
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2160,
        48
      ],
      "id": "00cdca36-6a5f-4242-99d1-248c2bdeb9d5",
      "name": "Merge1"
    },
    {
      "parameters": {
        "jsCode": "const output = {};\n$input.all().forEach(item => {\n  const { source, filename, error } = item.json;\n  if (!output[filename]) {\n    output[filename] = { filename };\n  }\n  if (source === 'tiktok')    output[filename].is_tiktok_uploaded    = error ? \"false\" : \"true\";\n  if (source === 'instagram') output[filename].is_instagram_uploaded = error ? \"false\" : \"true\";\n  if (source === 'youtube')   output[filename].is_yt_uploaded        = error ? \"false\" : \"true\";\n});\n\nObject.values(output).forEach(item => {\n  item.status = (\n    item.is_tiktok_uploaded === \"true\" &&\n    item.is_instagram_uploaded === \"true\" &&\n    item.is_yt_uploaded === \"true\"\n  )\n  ? \"completed\"\n  : \"failed\";\n});\n\nreturn Object.values(output).map(item => ({ json: item }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2432,
        -64
      ],
      "id": "25d3768f-c668-48ee-8950-0f1817a0f817",
      "name": "Code"
    }
  ],
  "pinData": {},
  "connections": {
    "Agent": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          },
          {
            "node": "Upload Tiktok",
            "type": "main",
            "index": 0
          },
          {
            "node": "Upload Instagram",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get tasks": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Tasks": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Upload Youtube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Tiktok": {
      "main": [
        [
          {
            "node": "Add src \"Tiktok\"",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add src \"Tiktok\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Instagram": {
      "main": [
        [
          {
            "node": "Add src \"Instagram\"",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add src \"Instagram\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gemini (Aftertask)": {
      "ai_languageModel": [
        [
          {
            "node": "After Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Update (Aftertask)": {
      "ai_tool": [
        [
          {
            "node": "After Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Upload Youtube": {
      "main": [
        [
          {
            "node": "Add src \"Youtube\"",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add src \"Youtube\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "After Agent": {
      "main": [
        []
      ]
    },
    "Add src \"Tiktok\"": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add src \"Instagram\"": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Add src \"Youtube\"": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "After Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "dee287cd-a503-42d7-a4a9-e4bc3b2730d9",
  "meta": {
    "templateId": "self-building-ai-agent",
    "templateCredsSetupCompleted": true,
    "instanceId": "8a2635f86c0c29df349e22235a0d09fc9c87f5e8fd5d0c44dce3ddd9f6636c24"
  },
  "id": "8ddVAXMpOaxrUfR1",
  "tags": []
}